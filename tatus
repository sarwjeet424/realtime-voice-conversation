[1mdiff --git a/backend/SUPABASE_SETUP.md b/backend/SUPABASE_SETUP.md[m
[1mnew file mode 100644[m
[1mindex 0000000..fc3f2d9[m
[1m--- /dev/null[m
[1m+++ b/backend/SUPABASE_SETUP.md[m
[36m@@ -0,0 +1,198 @@[m
[32m+[m[32m# Supabase Setup Guide for Voice Assistant[m
[32m+[m
[32m+[m[32mThis guide will help you set up Supabase for persistent data storage in your voice assistant application.[m
[32m+[m
[32m+[m[32m## ðŸš€ Quick Setup[m
[32m+[m
[32m+[m[32m### 1. Create Supabase Project[m
[32m+[m
[32m+[m[32m1. Go to [supabase.com](https://supabase.com)[m
[32m+[m[32m2. Sign up/Login and create a new project[m
[32m+[m[32m3. Choose a region close to your users[m
[32m+[m[32m4. Set a strong database password[m
[32m+[m[32m5. Wait for the project to be ready (2-3 minutes)[m
[32m+[m
[32m+[m[32m### 2. Get Your Credentials[m
[32m+[m
[32m+[m[32m1. Go to **Settings** â†’ **API**[m
[32m+[m[32m2. Copy your **Project URL** and **anon public** key[m
[32m+[m[32m3. These will be your `SUPABASE_URL` and `SUPABASE_ANON_KEY`[m
[32m+[m
[32m+[m[32m### 3. Set Up Database Schema[m
[32m+[m
[32m+[m[32m1. Go to **SQL Editor** in your Supabase dashboard[m
[32m+[m[32m2. Copy the contents of `supabase-schema.sql`[m
[32m+[m[32m3. Paste and run the SQL script[m
[32m+[m[32m4. This will create all necessary tables and functions[m
[32m+[m
[32m+[m[32m### 4. Configure Environment Variables[m
[32m+[m
[32m+[m[32mAdd these to your backend `.env` file:[m
[32m+[m
[32m+[m[32m```bash[m
[32m+[m[32m# Supabase Configuration[m
[32m+[m[32mSUPABASE_URL=your_project_url_here[m
[32m+[m[32mSUPABASE_ANON_KEY=your_anon_key_here[m
[32m+[m
[32m+[m[32m# Existing variables[m
[32m+[m[32mOPENAI_API_KEY=your_openai_key[m
[32m+[m[32mELEVENLABS_API_KEY=your_elevenlabs_key[m
[32m+[m[32mPORT=4000[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32m### 5. Install Supabase Client[m
[32m+[m
[32m+[m[32m```bash[m
[32m+[m[32mcd backend[m
[32m+[m[32mnpm install @supabase/supabase-js[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32m### 6. Update AuthService (Optional)[m
[32m+[m
[32m+[m[32mIf you want to use Supabase for persistence, replace the in-memory storage in `auth.service.ts` with calls to `SupabaseService`.[m
[32m+[m
[32m+[m[32m## ðŸ“Š Database Schema[m
[32m+[m
[32m+[m[32m### Tables Created[m
[32m+[m
[32m+[m[32m1. **user_sessions** - Active user sessions[m
[32m+[m[32m2. **blocked_users** - Users blocked due to daily limits[m
[32m+[m[32m3. **monthly_usage** - Monthly usage tracking[m
[32m+[m
[32m+[m[32m### Key Features[m
[32m+[m
[32m+[m[32m- **Row Level Security** enabled[m
[32m+[m[32m- **Automatic cleanup** functions[m
[32m+[m[32m- **Indexes** for performance[m
[32m+[m[32m- **Views** for easy monitoring[m
[32m+[m
[32m+[m[32m## ðŸ”§ Configuration Options[m
[32m+[m
[32m+[m[32m### Monthly Limits[m
[32m+[m[32m```sql[m
[32m+[m[32m-- In the schema, you can adjust:[m
[32m+[m[32m-- 1 session per month for regular users[m
[32m+[m[32m-- Unlimited for admin users[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32m### Admin Email[m
[32m+[m[32m```typescript[m
[32m+[m[32m// In auth.service.ts[m
[32m+[m[32mprivate readonly ADMIN_EMAIL = "sarwjeetfreelancer@gmail.com";[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32m## ðŸ“ˆ Monitoring[m
[32m+[m
[32m+[m[32m### Supabase Dashboard[m
[32m+[m[32m- Go to **Table Editor** to view data[m
[32m+[m[32m- Use **SQL Editor** for custom queries[m
[32m+[m[32m- Check **Logs** for debugging[m
[32m+[m
[32m+[m[32m### API Endpoints[m
[32m+[m[32m- `GET /monthly-usage` - All monthly usage[m
[32m+[m[32m- `GET /check-user/:email` - Specific user status[m
[32m+[m[32m- `GET /admin-status` - Admin configuration[m
[32m+[m
[32m+[m[32m## ðŸ§ª Testing[m
[32m+[m
[32m+[m[32m### Run Tests[m
[32m+[m[32m```bash[m
[32m+[m[32m# Test monthly system[m
[32m+[m[32mnode test-monthly-system.js[m
[32m+[m
[32m+[m[32m# Test with specific email[m
[32m+[m[32mTEST_EMAIL=test@example.com node test-monthly-system.js[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32m### Manual Testing[m
[32m+[m[32m1. Start backend: `npm run start:dev`[m
[32m+[m[32m2. Start frontend: `npm start`[m
[32m+[m[32m3. Test with different emails[m
[32m+[m[32m4. Check Supabase dashboard for data[m
[32m+[m
[32m+[m[32m## ðŸ”’ Security Considerations[m
[32m+[m
[32m+[m[32m### Row Level Security[m
[32m+[m[32m- Currently allows all operations[m
[32m+[m[32m- Adjust policies based on your needs[m
[32m+[m[32m- Consider adding authentication[m
[32m+[m
[32m+[m[32m### Data Privacy[m
[32m+[m[32m- User emails are stored[m
[32m+[m[32m- Session data is tracked[m
[32m+[m[32m- Consider GDPR compliance[m
[32m+[m
[32m+[m[32m## ðŸš€ Production Deployment[m
[32m+[m
[32m+[m[32m### Environment Variables[m
[32m+[m[32mMake sure to set these in your production environment:[m
[32m+[m[32m- `SUPABASE_URL`[m
[32m+[m[32m- `SUPABASE_ANON_KEY`[m
[32m+[m[32m- `OPENAI_API_KEY`[m
[32m+[m[32m- `ELEVENLABS_API_KEY`[m
[32m+[m
[32m+[m[32m### Database Backups[m
[32m+[m[32m- Supabase handles automatic backups[m
[32m+[m[32m- Consider additional backup strategies[m
[32m+[m[32m- Test restore procedures[m
[32m+[m
[32m+[m[32m## ðŸ“Š Monitoring Queries[m
[32m+[m
[32m+[m[32m### Check Monthly Usage[m
[32m+[m[32m```sql[m
[32m+[m[32mSELECT * FROM current_month_usage;[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32m### Check Active Sessions[m
[32m+[m[32m```sql[m
[32m+[m[32mSELECT * FROM active_sessions;[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32m### Check Blocked Users[m
[32m+[m[32m```sql[m
[32m+[m[32mSELECT * FROM blocked_users_current;[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32m## ðŸ”§ Troubleshooting[m
[32m+[m
[32m+[m[32m### Common Issues[m
[32m+[m
[32m+[m[32m1. **Connection Failed**[m
[32m+[m[32m   - Check SUPABASE_URL and SUPABASE_ANON_KEY[m
[32m+[m[32m   - Verify project is active[m
[32m+[m[32m   - Check network connectivity[m
[32m+[m
[32m+[m[32m2. **Permission Denied**[m
[32m+[m[32m   - Check RLS policies[m
[32m+[m[32m   - Verify API key permissions[m
[32m+[m[32m   - Check table permissions[m
[32m+[m
[32m+[m[32m3. **Data Not Persisting**[m
[32m+[m[32m   - Check if SupabaseService is being used[m
[32m+[m[32m   - Verify database connection[m
[32m+[m[32m   - Check for errors in logs[m
[32m+[m
[32m+[m[32m### Debug Mode[m
[32m+[m[32m```typescript[m
[32m+[m[32m// Add to auth.service.ts constructor[m
[32m+[m[32mthis.logger.log(`Supabase URL: ${supabaseUrl}`);[m
[32m+[m[32mthis.logger.log(`Supabase Key: ${supabaseKey ? 'Set' : 'Not set'}`);[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32m## ðŸ“š Additional Resources[m
[32m+[m
[32m+[m[32m- [Supabase Documentation](https://supabase.com/docs)[m
[32m+[m[32m- [Row Level Security Guide](https://supabase.com/docs/guides/auth/row-level-security)[m
[32m+[m[32m- [Database Functions](https://supabase.com/docs/guides/database/functions)[m
[32m+[m[32m- [API Reference](https://supabase.com/docs/reference/javascript)[m
[32m+[m
[32m+[m[32m## ðŸŽ¯ Next Steps[m
[32m+[m
[32m+[m[32m1. Set up Supabase project[m
[32m+[m[32m2. Run the schema script[m
[32m+[m[32m3. Configure environment variables[m
[32m+[m[32m4. Test the integration[m
[32m+[m[32m5. Deploy to production[m
[32m+[m
[32m+[m[32mYour voice assistant will now have persistent monthly usage tracking with admin exceptions![m
[32m+[m
[1mdiff --git a/backend/SUPABASE_SETUP_GUIDE.md b/backend/SUPABASE_SETUP_GUIDE.md[m
[1mnew file mode 100644[m
[1mindex 0000000..d6a2008[m
[1m--- /dev/null[m
[1m+++ b/backend/SUPABASE_SETUP_GUIDE.md[m
[36m@@ -0,0 +1,178 @@[m
[32m+[m[32m# Supabase Setup Guide for Voice Assistant[m
[32m+[m
[32m+[m[32mThis guide will help you set up Supabase for persistent data storage in your voice assistant application.[m
[32m+[m
[32m+[m[32m## ðŸš€ Quick Setup[m
[32m+[m
[32m+[m[32m### 1. Supabase Project Details[m
[32m+[m[32m- **Project URL**: `https://jbmgssngyldvqjflqepk.supabase.co`[m
[32m+[m[32m- **Database URL**: `postgresql://postgres:P@ssw0rd12345@db.jbmgssngyldvqjflqepk.supabase.co:5432/postgres`[m
[32m+[m
[32m+[m[32m### 2. Get Your API Key[m
[32m+[m[32m1. Go to [supabase.com](https://supabase.com)[m
[32m+[m[32m2. Login to your project: `jbmgssngyldvqjflqepk`[m
[32m+[m[32m3. Go to **Settings** â†’ **API**[m
[32m+[m[32m4. Copy your **anon public** key[m
[32m+[m[32m5. Update the `SUPABASE_ANON_KEY` in `supabase.service.ts`[m
[32m+[m
[32m+[m[32m### 3. Set Up Database Schema[m
[32m+[m[32m1. Go to **SQL Editor** in your Supabase dashboard[m
[32m+[m[32m2. Copy the contents of `supabase-schema.sql`[m
[32m+[m[32m3. Paste and run the SQL script[m
[32m+[m[32m4. This will create all necessary tables and functions[m
[32m+[m
[32m+[m[32m### 4. Install Dependencies[m
[32m+[m[32m```bash[m
[32m+[m[32mcd backend[m
[32m+[m[32mnpm install @supabase/supabase-js[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32m### 5. Update Supabase Service[m
[32m+[m[32mUpdate the `SUPABASE_ANON_KEY` in `backend/src/voice-rtc/services/supabase.service.ts`:[m
[32m+[m
[32m+[m[32m```typescript[m
[32m+[m[32mconst supabaseKey = "your_actual_anon_key_here";[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32m## ðŸ“Š Database Schema[m
[32m+[m
[32m+[m[32m### Tables Created[m
[32m+[m[32m1. **user_sessions** - Active user sessions[m
[32m+[m[32m2. **blocked_users** - Users blocked due to daily limits[m
[32m+[m[32m3. **monthly_usage** - Monthly usage tracking[m
[32m+[m
[32m+[m[32m### Key Features[m
[32m+[m[32m- **Row Level Security** enabled[m
[32m+[m[32m- **Automatic cleanup** functions[m
[32m+[m[32m- **Indexes** for performance[m
[32m+[m[32m- **Views** for easy monitoring[m
[32m+[m
[32m+[m[32m## ðŸ”§ Configuration[m
[32m+[m
[32m+[m[32m### Monthly Limits[m
[32m+[m[32m- **Session Duration**: 5 minutes[m
[32m+[m[32m- **Message Limit**: 20 messages per session[m
[32m+[m[32m- **Monthly Limit**: 1 session per month per email[m
[32m+[m[32m- **Admin Exception**: `sarwjeetfreelancer@gmail.com` has unlimited access[m
[32m+[m
[32m+[m[32m### Admin Email[m
[32m+[m[32m```typescript[m
[32m+[m[32m// In auth.service.ts[m
[32m+[m[32mprivate readonly ADMIN_EMAIL = "sarwjeetfreelancer@gmail.com";[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32m## ðŸ“ˆ Monitoring[m
[32m+[m
[32m+[m[32m### Supabase Dashboard[m
[32m+[m[32m- Go to **Table Editor** to view data[m
[32m+[m[32m- Use **SQL Editor** for custom queries[m
[32m+[m[32m- Check **Logs** for debugging[m
[32m+[m
[32m+[m[32m### API Endpoints[m
[32m+[m[32m- `GET /monthly-usage` - All monthly usage[m
[32m+[m[32m- `GET /check-user/:email` - Specific user status[m
[32m+[m[32m- `GET /admin-status` - Admin configuration[m
[32m+[m
[32m+[m[32m## ðŸ§ª Testing[m
[32m+[m
[32m+[m[32m### Run Tests[m
[32m+[m[32m```bash[m
[32m+[m[32m# Test Supabase system[m
[32m+[m[32mnode test-supabase-system.js[m
[32m+[m
[32m+[m[32m# Test with specific email[m
[32m+[m[32mTEST_EMAIL=test@example.com node test-supabase-system.js[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32m### Manual Testing[m
[32m+[m[32m1. Start backend: `npm run start:dev`[m
[32m+[m[32m2. Start frontend: `npm start`[m
[32m+[m[32m3. Test with different emails[m
[32m+[m[32m4. Check Supabase dashboard for data[m
[32m+[m
[32m+[m[32m## ðŸ”’ Security Considerations[m
[32m+[m
[32m+[m[32m### Row Level Security[m
[32m+[m[32m- Currently allows all operations[m
[32m+[m[32m- Adjust policies based on your needs[m
[32m+[m[32m- Consider adding authentication[m
[32m+[m
[32m+[m[32m### Data Privacy[m
[32m+[m[32m- User emails are stored[m
[32m+[m[32m- Session data is tracked[m
[32m+[m[32m- Consider GDPR compliance[m
[32m+[m
[32m+[m[32m## ðŸš€ Production Deployment[m
[32m+[m
[32m+[m[32m### Environment Variables[m
[32m+[m[32mMake sure to set these in your production environment:[m
[32m+[m[32m- `SUPABASE_URL` (already set)[m
[32m+[m[32m- `SUPABASE_ANON_KEY` (update with actual key)[m
[32m+[m[32m- `OPENAI_API_KEY`[m
[32m+[m[32m- `ELEVENLABS_API_KEY`[m
[32m+[m
[32m+[m[32m### Database Backups[m
[32m+[m[32m- Supabase handles automatic backups[m
[32m+[m[32m- Consider additional backup strategies[m
[32m+[m[32m- Test restore procedures[m
[32m+[m
[32m+[m[32m## ðŸ“Š Monitoring Queries[m
[32m+[m
[32m+[m[32m### Check Monthly Usage[m
[32m+[m[32m```sql[m
[32m+[m[32mSELECT * FROM current_month_usage;[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32m### Check Active Sessions[m
[32m+[m[32m```sql[m
[32m+[m[32mSELECT * FROM active_sessions;[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32m### Check Blocked Users[m
[32m+[m[32m```sql[m
[32m+[m[32mSELECT * FROM blocked_users_current;[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32m## ðŸ”§ Troubleshooting[m
[32m+[m
[32m+[m[32m### Common Issues[m
[32m+[m
[32m+[m[32m1. **Connection Failed**[m
[32m+[m[32m   - Check SUPABASE_URL and SUPABASE_ANON_KEY[m
[32m+[m[32m   - Verify project is active[m
[32m+[m[32m   - Check network connectivity[m
[32m+[m
[32m+[m[32m2. **Permission Denied**[m
[32m+[m[32m   - Check RLS policies[m
[32m+[m[32m   - Verify API key permissions[m
[32m+[m[32m   - Check table permissions[m
[32m+[m
[32m+[m[32m3. **Data Not Persisting**[m
[32m+[m[32m   - Check if SupabaseService is being used[m
[32m+[m[32m   - Verify database connection[m
[32m+[m[32m   - Check for errors in logs[m
[32m+[m
[32m+[m[32m### Debug Mode[m
[32m+[m[32m```typescript[m
[32m+[m[32m// Add to supabase.service.ts constructor[m
[32m+[m[32mthis.logger.log(`Supabase URL: ${supabaseUrl}`);[m
[32m+[m[32mthis.logger.log(`Supabase Key: ${supabaseKey ? 'Set' : 'Not set'}`);[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32m## ðŸ“š Additional Resources[m
[32m+[m
[32m+[m[32m- [Supabase Documentation](https://supabase.com/docs)[m
[32m+[m[32m- [Row Level Security Guide](https://supabase.com/docs/guides/auth/row-level-security)[m
[32m+[m[32m- [Database Functions](https://supabase.com/docs/guides/database/functions)[m
[32m+[m[32m- [API Reference](https://supabase.com/docs/reference/javascript)[m
[32m+[m
[32m+[m[32m## ðŸŽ¯ Next Steps[m
[32m+[m
[32m+[m[32m1. Get your Supabase anon key[m
[32m+[m[32m2. Update the key in `supabase.service.ts`[m
[32m+[m[32m3. Run the schema script in Supabase[m
[32m+[m[32m4. Test the integration[m
[32m+[m[32m5. Deploy to production[m
[32m+[m
[32m+[m[32mYour voice assistant will now have persistent monthly usage tracking with admin exceptions using Supabase![m
[32m+[m
[1mdiff --git a/backend/package-lock.json b/backend/package-lock.json[m
[1mindex f7adba5..55a8086 100644[m
[1m--- a/backend/package-lock.json[m
[1m+++ b/backend/package-lock.json[m
[36m@@ -15,6 +15,7 @@[m
         "@nestjs/platform-express": "^10.3.0",[m
         "@nestjs/platform-socket.io": "^10.3.0",[m
         "@nestjs/websockets": "^10.3.0",[m
[32m+[m[32m        "@supabase/supabase-js": "^2.57.4",[m
         "elevenlabs": "^0.9.0",[m
         "openai": "^4.24.0",[m
         "reflect-metadata": "^0.2.1",[m
[36m@@ -2069,6 +2070,80 @@[m
       "integrity": "sha512-9BCxFwvbGg/RsZK9tjXd8s4UcwR0MWeFQ1XEKIQVVvAGJyINdrqKMcTRyLoK8Rse1GjzLV9cwjWV1olXRWEXVA==",[m
       "license": "MIT"[m
     },[m
[32m+[m[32m    "node_modules/@supabase/auth-js": {[m
[32m+[m[32m      "version": "2.71.1",[m
[32m+[m[32m      "resolved": "https://registry.npmjs.org/@supabase/auth-js/-/auth-js-2.71.1.tgz",[m
[32m+[m[32m      "integrity": "sha512-mMIQHBRc+SKpZFRB2qtupuzulaUhFYupNyxqDj5Jp/LyPvcWvjaJzZzObv6URtL/O6lPxkanASnotGtNpS3H2Q==",[m
[32m+[m[32m      "license": "MIT",[m
[32m+[m[32m      "dependencies": {[m
[32m+[m[32m        "@supabase/node-fetch": "^2.6.14"[m
[32m+[m[32m      }[m
[32m+[m[32m    },[m
[32m+[m[32m    "node_modules/@supabase/functions-js": {[m
[32m+[m[32m      "version": "2.4.6",[m
[32m+[m[32m      "resolved": "https://registry.npmjs.org/@supabase/functions-js/-/functions-js-2.4.6.tgz",[m
[32m+[m[32m      "integrity": "sha512-bhjZ7rmxAibjgmzTmQBxJU6ZIBCCJTc3Uwgvdi4FewueUTAGO5hxZT1Sj6tiD+0dSXf9XI87BDdJrg12z8Uaew==",[m
[32m+[m[32m      "license": "MIT",[m
[32m+[m[32m      "dependencies": {[m
[32m+[m[32m        "@supabase/node-fetch": "^2.6.14"[m
[32m+[m[32m      }[m
[32m+[m[32m    },[m
[32m+[m[32m    "node_modules/@supabase/node-fetch": {[m
[32m+[m[32m      "version": "2.6.15",[m
[32m+[m[32m      "resolved": "https://registry.npmjs.org/@supabase/node-fetch/-/node-fetch-2.6.15.tgz",[m
[32m+[m[32m      "integrity": "sha512-1ibVeYUacxWYi9i0cf5efil6adJ9WRyZBLivgjs+AUpewx1F3xPi7gLgaASI2SmIQxPoCEjAsLAzKPgMJVgOUQ==",[m
[32m+[m[32m      "license": "MIT",[m
[32m+[m[32m      "dependencies": {[m
[32m+[m[32m        "whatwg-url": "^5.0.0"[m
[32m+[m[32m      },[m
[32m+[m[32m      "engines": {[m
[32m+[m[32m        "node": "4.x || >=6.0.0"[m
[32m+[m[32m      }[m
[32m+[m[32m    },[m
[32m+[m[32m    "node_modules/@supabase/postgrest-js": {[m
[32m+[m[32m      "version": "1.21.4",[m
[32m+[m[32m      "resolved": "https://registry.npmjs.org/@supabase/postgrest-js/-/postgrest-js-1.21.4.tgz",[m
[32m+[m[32m      "integrity": "sha512-TxZCIjxk6/dP9abAi89VQbWWMBbybpGWyvmIzTd79OeravM13OjR/YEYeyUOPcM1C3QyvXkvPZhUfItvmhY1IQ==",[m
[32m+[m[32m      "license": "MIT",[m
[32m+[m[32m      "dependencies": {[m
[32m+[m[32m        "@supabase/node-fetch": "^2.6.14"[m
[32m+[m[32m      }[m
[32m+[m[32m    },[m
[32m+[m[32m    "node_modules/@supabase/realtime-js": {[m
[32m+[m[32m      "version": "2.15.5",[m
[32m+[m[32m      "resolved": "https://registry.npmjs.org/@supabase/realtime-js/-/realtime-js-2.15.5.tgz",[m
[32m+[m[32m      "integrity": "sha512-/Rs5Vqu9jejRD8ZeuaWXebdkH+J7V6VySbCZ/zQM93Ta5y3mAmocjioa/nzlB6qvFmyylUgKVS1KpE212t30OA==",[m
[32m+[m[32m      "license": "MIT",[m
[32m+[m[32m      "dependencies": {[m
[32m+[m[32m        "@supabase/node-fetch": "^2.6.13",[m
[32m+[m[32m        "@types/phoenix": "^1.6.6",[m
[32m+[m[32m        "@types/ws": "^8.18.1",[m
[32m+[m[32m        "ws": "^8.18.2"[m
[32m+[m[32m      }[m
[32m+[m[32m    },[m
[32m+[m[32m    "node_modules/@supabase/storage-js": {[m
[32m+[m[32m      "version": "2.12.1",[m
[32m+[m[32m      "resolved": "https://registry.npmjs.org/@supabase/storage-js/-/storage-js-2.12.1.tgz",[m
[32m+[m[32m      "integrity": "sha512-QWg3HV6Db2J81VQx0PqLq0JDBn4Q8B1FYn1kYcbla8+d5WDmTdwwMr+EJAxNOSs9W4mhKMv+EYCpCrTFlTj4VQ==",[m
[32m+[m[32m      "license": "MIT",[m
[32m+[m[32m      "dependencies": {[m
[32m+[m[32m        "@supabase/node-fetch": "^2.6.14"[m
[32m+[m[32m      }[m
[32m+[m[32m    },[m
[32m+[m[32m    "node_modules/@supabase/supabase-js": {[m
[32m+[m[32m      "version": "2.57.4",[m
[32m+[m[32m      "resolved": "https://registry.npmjs.org/@supabase/supabase-js/-/supabase-js-2.57.4.tgz",[m
[32m+[m[32m      "integrity": "sha512-LcbTzFhHYdwfQ7TRPfol0z04rLEyHabpGYANME6wkQ/kLtKNmI+Vy+WEM8HxeOZAtByUFxoUTTLwhXmrh+CcVw==",[m
[32m+[m[32m      "license": "MIT",[m
[32m+[m[32m      "dependencies": {[m
[32m+[m[32m        "@supabase/auth-js": "2.71.1",[m
[32m+[m[32m        "@supabase/functions-js": "2.4.6",[m
[32m+[m[32m        "@supabase/node-fetch": "2.6.15",[m
[32m+[m[32m        "@supabase/postgrest-js": "1.21.4",[m
[32m+[m[32m        "@supabase/realtime-js": "2.15.5",[m
[32m+[m[32m        "@supabase/storage-js": "2.12.1"[m
[32m+[m[32m      }[m
[32m+[m[32m    },[m
     "node_modules/@tokenizer/inflate": {[m
       "version": "0.2.7",[m
       "resolved": "https://registry.npmjs.org/@tokenizer/inflate/-/inflate-0.2.7.tgz",[m
[36m@@ -2355,6 +2430,12 @@