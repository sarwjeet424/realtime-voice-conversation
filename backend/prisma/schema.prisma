// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = "postgresql://neondb_owner:npg_siSlQe27bcja@ep-morning-poetry-adln4mhb-pooler.c-2.us-east-1.aws.neon.tech/neondb?sslmode=require&channel_binding=require"
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  conversations Conversation[]
  preferences   UserPreferences?

  @@map("users")
}

model Conversation {
  id        String   @id @default(cuid())
  userId    String
  title     String?
  summary   String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user     User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  messages Message[]

  @@map("conversations")
}

model Message {
  id             String   @id @default(cuid())
  conversationId String
  role           String   // "user" | "assistant" | "system"
  content        String
  metadata       Json?    // Additional data like emotion, processing time, etc.
  createdAt      DateTime @default(now())

  conversation Conversation @relation(fields: [conversationId], references: [id], onDelete: Cascade)

  @@map("messages")
}

model UserPreferences {
  id           String @id @default(cuid())
  userId       String @unique
  voiceId      String? // ElevenLabs voice ID
  language     String  @default("en-US")
  model        String  @default("gpt-3.5-turbo")
  temperature  Float   @default(0.7)
  maxTokens    Int     @default(100)
  streaming    Boolean @default(true)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("user_preferences")
}

model Analytics {
  id            String   @id @default(cuid())
  userId        String?
  sessionId     String
  eventType     String   // "message_sent", "response_received", "error", etc.
  eventData     Json?    // Additional event data
  responseTime  Int?     // Response time in milliseconds
  createdAt     DateTime @default(now())

  @@map("analytics")
}
